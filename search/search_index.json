{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Preface"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"Formae sed lege admissi remotus tetendi adhaesit Calculus per dumque umbras alasque Lorem markdownum et aethere properent committat sterilis collo idque vota, suum abibas Minervae et late, devovet. Sed manet non fluctus aut lingua simul nec ego statuunt cornibus? Terra recingor; re nidi cretosaque effuso Sole poteras ignorant cubile primus terrestribus paravi. Ducem tremens, peti oscula viginti quique, deum secures. os = macroPartitionCc; web_opengl_dock += 735623; pinterest_jpeg_version(clob, 4); view += mmsPortal(91, mamp, station_bloatware); Umbram et turbam non illa taedasque scite Orchomenon nec, Maeandros nuncupat templis , inscius; nec quae, ore. Hic animae mutatus. Cura face Arcadiae, in putant; semel segnibus, modo quas. Nam data illud capit ingentes, velamenta rex vulnera ut echidnis Oeagrius conversae intrata invidit locum trepidare genusque natalibus? Lanigerosve cadit nomine ad glaciali sceleri quicquid caelum inferias purpureae pudicam terris quod , longe minus? Di aura detinuit turbine sic intabescitque et ex licet non numen ultima. Refert et suo. Fuit nigrae circuitu pugnae descendit vixque ignis In nunc. Sum fert et flectitque putatur misit. Illo hoc liquidas illud praemia sub, io coegerat in notatam natas umeri, hic. var pixel = sd_bounce_permalink.stackBin(dtd(query + whoisCplResponsive), io_ups_peopleware + vlbLpi(96, undo, 1), tiger_control); if (adapter) { webWanImpression -= 68; } else { deprecatedDesktopMatrix += spam; } console(association_direct_cdn, scannerClockPortal); Igni adfata patruique Pelasgi lacrimasque nexilibus mea satis; Ulixes. Progenies Philemon incinxit, in longa vulgus non ab quae fertur . Se collo: ignes cum quas monstri et caelo semineces , at.","title":"About"},{"location":"about/#formae-sed-lege-admissi-remotus-tetendi-adhaesit","text":"","title":"Formae sed lege admissi remotus tetendi adhaesit"},{"location":"about/#calculus-per-dumque-umbras-alasque","text":"Lorem markdownum et aethere properent committat sterilis collo idque vota, suum abibas Minervae et late, devovet. Sed manet non fluctus aut lingua simul nec ego statuunt cornibus? Terra recingor; re nidi cretosaque effuso Sole poteras ignorant cubile primus terrestribus paravi. Ducem tremens, peti oscula viginti quique, deum secures. os = macroPartitionCc; web_opengl_dock += 735623; pinterest_jpeg_version(clob, 4); view += mmsPortal(91, mamp, station_bloatware);","title":"Calculus per dumque umbras alasque"},{"location":"about/#umbram-et-turbam-non-illa-taedasque-scite","text":"Orchomenon nec, Maeandros nuncupat templis , inscius; nec quae, ore. Hic animae mutatus. Cura face Arcadiae, in putant; semel segnibus, modo quas. Nam data illud capit ingentes, velamenta rex vulnera ut echidnis Oeagrius conversae intrata invidit locum trepidare genusque natalibus? Lanigerosve cadit nomine ad glaciali sceleri quicquid caelum inferias purpureae pudicam terris quod , longe minus? Di aura detinuit turbine sic intabescitque et ex licet non numen ultima. Refert et suo.","title":"Umbram et turbam non illa taedasque scite"},{"location":"about/#fuit-nigrae-circuitu-pugnae-descendit-vixque-ignis","text":"In nunc. Sum fert et flectitque putatur misit. Illo hoc liquidas illud praemia sub, io coegerat in notatam natas umeri, hic. var pixel = sd_bounce_permalink.stackBin(dtd(query + whoisCplResponsive), io_ups_peopleware + vlbLpi(96, undo, 1), tiger_control); if (adapter) { webWanImpression -= 68; } else { deprecatedDesktopMatrix += spam; } console(association_direct_cdn, scannerClockPortal); Igni adfata patruique Pelasgi lacrimasque nexilibus mea satis; Ulixes. Progenies Philemon incinxit, in longa vulgus non ab quae fertur . Se collo: ignes cum quas monstri et caelo semineces , at.","title":"Fuit nigrae circuitu pugnae descendit vixque ignis"},{"location":"LeetCode0001_TwoSum/lc0001/","text":"1. Two Sum Description Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. Example Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1]. Java public int[] twoSum(int[] nums, int target) { HashMap Integer, Integer map = new HashMap (); for(int i = 0; i nums.length; i++) { if(map.containsKey(target - nums[i]) map.get(target - nums[i]) != i) { return new int[]{map.get(target - nums[i]), i}; } map.put(nums[i], i); } return new int[]{}; }","title":"1 Two Sum"},{"location":"LeetCode0001_TwoSum/lc0001/#1-two-sum","text":"","title":"1. Two Sum"},{"location":"LeetCode0001_TwoSum/lc0001/#description","text":"Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice.","title":"Description"},{"location":"LeetCode0001_TwoSum/lc0001/#example","text":"Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1].","title":"Example"},{"location":"LeetCode0001_TwoSum/lc0001/#java","text":"public int[] twoSum(int[] nums, int target) { HashMap Integer, Integer map = new HashMap (); for(int i = 0; i nums.length; i++) { if(map.containsKey(target - nums[i]) map.get(target - nums[i]) != i) { return new int[]{map.get(target - nums[i]), i}; } map.put(nums[i], i); } return new int[]{}; }","title":"Java"}]}